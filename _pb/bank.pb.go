// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bank.proto

package transaction

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountBalance struct {
	TotalBalance         float64  `protobuf:"fixed64,1,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountBalance) Reset()         { *m = AccountBalance{} }
func (m *AccountBalance) String() string { return proto.CompactTextString(m) }
func (*AccountBalance) ProtoMessage()    {}
func (*AccountBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{0}
}

func (m *AccountBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountBalance.Unmarshal(m, b)
}
func (m *AccountBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountBalance.Marshal(b, m, deterministic)
}
func (m *AccountBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountBalance.Merge(m, src)
}
func (m *AccountBalance) XXX_Size() int {
	return xxx_messageInfo_AccountBalance.Size(m)
}
func (m *AccountBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountBalance.DiscardUnknown(m)
}

var xxx_messageInfo_AccountBalance proto.InternalMessageInfo

func (m *AccountBalance) GetTotalBalance() float64 {
	if m != nil {
		return m.TotalBalance
	}
	return 0
}

type Account struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Balance              *AccountBalance `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{1}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account) GetBalance() *AccountBalance {
	if m != nil {
		return m.Balance
	}
	return nil
}

type Transaction struct {
	Origin               *Account `protobuf:"bytes,1,opt,name=Origin,proto3" json:"Origin,omitempty"`
	Destination          *Account `protobuf:"bytes,2,opt,name=Destination,proto3" json:"Destination,omitempty"`
	Value                float64  `protobuf:"fixed64,3,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{2}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetOrigin() *Account {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *Transaction) GetDestination() *Account {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Transaction) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*AccountBalance)(nil), "transaction.AccountBalance")
	proto.RegisterType((*Account)(nil), "transaction.Account")
	proto.RegisterType((*Transaction)(nil), "transaction.Transaction")
}

func init() { proto.RegisterFile("bank.proto", fileDescriptor_a6371916d5cb63b4) }

var fileDescriptor_a6371916d5cb63b4 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x49, 0x17, 0xb7, 0x32, 0x91, 0x3d, 0x0c, 0x7b, 0x28, 0x7a, 0x59, 0x7a, 0xda, 0x83,
	0xf4, 0x50, 0xff, 0x80, 0xe2, 0x45, 0xd9, 0xbb, 0x52, 0x45, 0xcf, 0xd3, 0x34, 0x6a, 0xb0, 0x24,
	0x4b, 0x3a, 0xab, 0xcf, 0xe0, 0xa3, 0xf9, 0x56, 0x62, 0x8c, 0xd8, 0x42, 0x2f, 0x3d, 0x4e, 0xf2,
	0xfb, 0x7d, 0x5f, 0xc2, 0x00, 0xd4, 0x64, 0xdf, 0x8a, 0xad, 0x77, 0xec, 0x50, 0xb2, 0x27, 0xdb,
	0x91, 0x62, 0xe3, 0x6c, 0x7e, 0x0a, 0x8b, 0x6b, 0xa5, 0xdc, 0xce, 0xf2, 0x0d, 0xb5, 0x64, 0x95,
	0xc6, 0x1c, 0x0e, 0xd8, 0x31, 0xb5, 0x71, 0xce, 0xc4, 0x4a, 0xac, 0x45, 0x35, 0x38, 0xcb, 0xef,
	0x20, 0x8d, 0x16, 0x2e, 0x20, 0x31, 0x4d, 0x80, 0x66, 0x55, 0x62, 0x1a, 0x3c, 0x83, 0xb4, 0x8e,
	0x66, 0xb2, 0x12, 0x6b, 0x59, 0x1e, 0x15, 0xbd, 0xbe, 0x62, 0x58, 0x56, 0xfd, 0xb1, 0xf9, 0xa7,
	0x00, 0xf9, 0xf0, 0xcf, 0xe1, 0x31, 0xcc, 0x6f, 0xbd, 0x79, 0x31, 0x36, 0x44, 0xcb, 0x72, 0x39,
	0x96, 0x52, 0x45, 0x06, 0xcf, 0x41, 0x6e, 0x74, 0xc7, 0xc6, 0xd2, 0xcf, 0x75, 0x2c, 0x1e, 0x57,
	0xfa, 0x20, 0x2e, 0x61, 0xef, 0x91, 0xda, 0x9d, 0xce, 0x66, 0xe1, 0x93, 0xbf, 0x43, 0xf9, 0x25,
	0x00, 0x7b, 0x6f, 0xb9, 0xd7, 0xfe, 0xdd, 0x28, 0x8d, 0x17, 0x90, 0x6e, 0xf4, 0xd6, 0x75, 0x86,
	0x31, 0x1b, 0x44, 0xf7, 0xd8, 0xc3, 0xd1, 0x52, 0xbc, 0x02, 0x78, 0x32, 0xfc, 0xda, 0x78, 0xfa,
	0xa0, 0x76, 0xb2, 0x7d, 0x09, 0xfb, 0x01, 0x7a, 0xd6, 0x7e, 0xaa, 0x5b, 0xcf, 0xc3, 0xce, 0x4f,
	0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x3b, 0x55, 0x1a, 0x01, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionServiceClient is the client API for TransactionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionServiceClient interface {
	Deposit(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Account, error)
	Withdrawal(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Account, error)
	Transfer(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Account, error)
}

type transactionServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransactionServiceClient(cc *grpc.ClientConn) TransactionServiceClient {
	return &transactionServiceClient{cc}
}

func (c *transactionServiceClient) Deposit(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/transaction.TransactionService/Deposit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionServiceClient) Withdrawal(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/transaction.TransactionService/Withdrawal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionServiceClient) Transfer(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/transaction.TransactionService/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServiceServer is the server API for TransactionService service.
type TransactionServiceServer interface {
	Deposit(context.Context, *Transaction) (*Account, error)
	Withdrawal(context.Context, *Transaction) (*Account, error)
	Transfer(context.Context, *Transaction) (*Account, error)
}

func RegisterTransactionServiceServer(s *grpc.Server, srv TransactionServiceServer) {
	s.RegisterService(&_TransactionService_serviceDesc, srv)
}

func _TransactionService_Deposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).Deposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaction.TransactionService/Deposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).Deposit(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionService_Withdrawal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).Withdrawal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaction.TransactionService/Withdrawal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).Withdrawal(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionService_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaction.TransactionService/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).Transfer(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transaction.TransactionService",
	HandlerType: (*TransactionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deposit",
			Handler:    _TransactionService_Deposit_Handler,
		},
		{
			MethodName: "Withdrawal",
			Handler:    _TransactionService_Withdrawal_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _TransactionService_Transfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bank.proto",
}
